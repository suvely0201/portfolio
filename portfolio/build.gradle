plugins {
	id "org.springframework.boot" version "2.5.3"
	id "io.spring.dependency-management" version "1.0.11.RELEASE"
	id "java"
	id "war"
}

war {
	enabled = true
	baseName = "portfolio"
}

group = "jj.group"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "1.8"

repositories {
	mavenCentral()
}

dependencies {
	
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-jdbc"
	implementation "org.springframework.boot:spring-boot-starter-tomcat"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.security:spring-security-messaging"
	
	
	// 서버 사이드 구현을 위한 Netflix Feign 추가
	implementation "com.netflix.feign:feign-core:8.18.0"
	implementation "com.netflix.feign:feign-jackson:8.18.0"
	implementation "com.netflix.feign:feign-gson:8.18.0"
	implementation "com.netflix.feign:feign-okhttp:8.18.0"
	
	// OAuth2 _ 소셜로그인 구현 필요 + 외부 URL에서 확인.
	// implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// implementation 'org.springframework.security:spring-security-oauth2-client:5.2.0.RELEASE'
	// implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.2.0.RELEASE'
	
	
	// javax.xml.bind 사용
	implementation "javax.xml.bind:jaxb-api"
	
	implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.1"
	implementation "org.apache.tomcat:tomcat-jdbc"
	implementation "org.slf4j:slf4j-api:1.7.26"
	implementation "org.slf4j:jcl-over-slf4j:1.7.26"
	implementation "ch.qos.logback:logback-classic:1.2.3"
	implementation "org.aspectj:aspectjrt:1.9.2"
	
	// white label 404 error ( No mapping for GET 경로 못찾아서 추가 )
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	
	implementation "javax.inject:javax.inject:1"
	implementation "javax.servlet:jstl"
	implementation "javax.annotation:javax.annotation-api"
	
	compileOnly "org.projectlombok:lombok"
	providedCompile "mysql:mysql-connector-java"
	annotationProcessor "org.projectlombok:lombok"
	
	providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"
	
	testImplementation("org.springframework.boot:spring-boot-starter-test") 
	
}

test {
	useJUnitPlatform()
}
